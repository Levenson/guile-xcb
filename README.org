#+TITLE: guile-xcb
#+AUTHOR: Mark Witmer
#+DESCRIPTION: A Guile implementation of the X protocol using xml/xcb
#+TODO: TODO(t) IN_PROGRESS(p) | DONE(d)

* Overview

guile-xcb is a client-side implementation of the X protocol written
(almost) entirely in Guile. It makes use of the Guile compilation
infrastructure and virtual machine to parse and compile the xml
descriptions of the X protocol provided by the xcb project into Guile
object code files, which can be loaded as modules into a running guile
process.

The only component of this library not written in Guile so far is the
code for evaluating expressions; the operators specified in the xml
files (+, -, /, &, <<, etc.) expect C-like behavior, and the safest
way to achieve that is to provide a simple wrapper around C arithmetic
expressions. I would love to replace this with something in pure Guile
at a future date.

* Documentation

I will provide documentation for this package as development
progresses and it becomes usable. The basic API will be similar to the
C xcb api, but with syntactic adaptations making it more suitable for
use in scheme programming (vectors or lists instead of iterators,
callbacks to handle responses rather than cookies, etc.)

* Simple Definitions

I always wish projects like this would explain their acronyms and
jargon, so here are a few definitions:

- *Guile*: "GNU Ubiquitous Intelligent Language for Extensions": a
  programming system that includes an implementation of the scheme
  programming language, a compiler for other languages, and a virtual
  machine
- *Lisp*: Any one of a number of programming languages, primarily
  identified by their use of s-expressions
- *Scheme*: A variant of lisp that focuses on minimal language design
  and expressive syntax
- *s-expression*: Syntax where a list of elements are enclosed in
  parentheses and separated by spaces. eg. /(list 1 2 3)/. The first
  element in the list is often interpreted as an operator, with the
  subsequent elements treated as arguments to the first.
- *X*: A windowing system originally implemented for Unix-based
  systems. It has a client-server architecture where the server does
  all the behind-the-scenes calculations for managing windows on a
  graphical display, but leaves the actual rendering up to clients
- *X protocol*: A standardized set of requests, replies, and events
  that an X server uses to communicate with its clients
- *xcb*: This stands for "X C Bindings", a C library that implements
  the client side of the X protocol.
- *xml/xcb*: The underlying specification of the X protocol and
  several common extensions that xcb uses, written in xml. The C code
  is generated by running an xslt transformation on the xml files.
- *xslt*: "Extensible Stylesheet Language Transformations," a
  programming language using xml syntax frequently used to transfer
  one file (usually xml) into another file of a different format

* Author

Mark Witmer is the author of this library. You can contact him at
[[mark@markwitmer.com]].

* Status

Here is a brief outline of steps required to get this working, and
their current status:

** DONE Parse xml files using sxml-match
** DONE Extract documentation and make it interactively browseable
** DONE Add typechecking for fields sent to and from the X server
** IN_PROGRESS Define structures with fields, lists, and padding
** TODO Implement packing/unpacking structures to binary representation
** TODO Connect to/disconnect from X server
** TODO Send/receive requests, replies, and events
